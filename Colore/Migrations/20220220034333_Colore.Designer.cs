// <auto-generated />
using System;
using Colore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Colore.Migrations
{
    [DbContext(typeof(Conexao))]
    [Migration("20220220034333_Colore")]
    partial class Colore
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Acessos.Empresa.Empresa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("enderecoid")
                        .HasColumnType("int");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("enderecoid");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("Acessos.Usuario.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("curriculoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("curriculoid");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Colore.Models.Acessos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("empresaid")
                        .HasColumnType("int");

                    b.Property<string>("imagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("empresaid");

                    b.HasIndex("usuarioid");

                    b.ToTable("Acessos");
                });

            modelBuilder.Entity("Colore.Models.Curriculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataNasc")
                        .HasColumnType("datetime2");

                    b.Property<int>("enderecoid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomeSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("requisitosid")
                        .HasColumnType("int");

                    b.Property<int>("rg")
                        .HasColumnType("int");

                    b.Property<string>("sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("enderecoid");

                    b.HasIndex("requisitosid");

                    b.ToTable("Curriculo");
                });

            modelBuilder.Entity("Colore.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bairro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cep")
                        .HasColumnType("int");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<string>("pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rua")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("Colore.Models.Formacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("fim")
                        .HasColumnType("datetime2");

                    b.Property<string>("imagemDiploma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("instituicao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Formacao");
                });

            modelBuilder.Entity("Colore.Models.Requisitos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("escolaridade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("experiencia")
                        .HasColumnType("int");

                    b.Property<string>("idiomas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Requisitos");
                });

            modelBuilder.Entity("Colore.Models.Vaga", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("int");

                    b.Property<string>("beneficios")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dataFinalInscricao")
                        .HasColumnType("datetime2");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("empresaid")
                        .HasColumnType("int");

                    b.Property<int>("requisitosid")
                        .HasColumnType("int");

                    b.Property<double>("salario")
                        .HasColumnType("float");

                    b.Property<string>("titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Usuarioid");

                    b.HasIndex("empresaid");

                    b.HasIndex("requisitosid");

                    b.ToTable("Vaga");
                });

            modelBuilder.Entity("Acessos.Empresa.Empresa", b =>
                {
                    b.HasOne("Colore.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");
                });

            modelBuilder.Entity("Acessos.Usuario.Usuario", b =>
                {
                    b.HasOne("Colore.Models.Curriculo", "curriculo")
                        .WithMany()
                        .HasForeignKey("curriculoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("curriculo");
                });

            modelBuilder.Entity("Colore.Models.Acessos", b =>
                {
                    b.HasOne("Acessos.Empresa.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("empresaid");

                    b.HasOne("Acessos.Usuario.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid");

                    b.Navigation("empresa");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Colore.Models.Curriculo", b =>
                {
                    b.HasOne("Colore.Models.Endereco", "endereco")
                        .WithMany()
                        .HasForeignKey("enderecoid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colore.Models.Requisitos", "requisitos")
                        .WithMany()
                        .HasForeignKey("requisitosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("endereco");

                    b.Navigation("requisitos");
                });

            modelBuilder.Entity("Colore.Models.Vaga", b =>
                {
                    b.HasOne("Acessos.Usuario.Usuario", null)
                        .WithMany("vagas")
                        .HasForeignKey("Usuarioid");

                    b.HasOne("Acessos.Empresa.Empresa", "empresa")
                        .WithMany("vagas")
                        .HasForeignKey("empresaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Colore.Models.Requisitos", "requisitos")
                        .WithMany()
                        .HasForeignKey("requisitosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("empresa");

                    b.Navigation("requisitos");
                });

            modelBuilder.Entity("Acessos.Empresa.Empresa", b =>
                {
                    b.Navigation("vagas");
                });

            modelBuilder.Entity("Acessos.Usuario.Usuario", b =>
                {
                    b.Navigation("vagas");
                });
#pragma warning restore 612, 618
        }
    }
}
